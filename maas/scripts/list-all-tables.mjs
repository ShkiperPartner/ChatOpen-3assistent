import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://fcsxnsjnetrtcxprcpur.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZjc3huc2puZXRydGN4cHJjcHVyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkyMjEyODUsImV4cCI6MjA3NDc5NzI4NX0.MmIqCxAobuvYAYrFHBsQnglOofs1sXtAb4yiOyB9_Rk';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function listAllTables() {
  try {
    console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü MaaS –≤ Supabase...\n');

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å
    const { data, error } = await supabase
      .from('information_schema.tables')
      .select('table_name')
      .eq('table_schema', 'public')
      .order('table_name');

    if (error) {
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - —á–µ—Ä–µ–∑ rpc
      console.log('‚ö†Ô∏è  –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ SQL...\n');

      // –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏–º –∫–∞–∂–¥—É—é —Ç–∞–±–ª–∏—Ü—É –æ—Ç–¥–µ–ª—å–Ω–æ
      const maas_tables = [
        'projects',
        'chats',
        'facts',
        'thread_summaries',
        'decisions',
        'links',
        'sources',
        'maas_metrics',
        'snapshot_cache'
      ];

      console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü MaaS:\n');

      for (const table of maas_tables) {
        const { data, error } = await supabase
          .from(table)
          .select('count')
          .limit(0);

        if (error) {
          console.log(`‚ùå ${table.padEnd(20)} - –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢`);
        } else {
          console.log(`‚úÖ ${table.padEnd(20)} - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        }
      }
    } else {
      console.log('–¢–∞–±–ª–∏—Ü—ã –≤ public schema:');
      data.forEach(row => console.log(`  - ${row.table_name}`));
    }

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', err.message);
  }
}

listAllTables();
